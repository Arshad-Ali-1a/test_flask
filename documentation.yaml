openapi: 3.0.0
info:
  title: User API
  version: v1
paths:
  /users:
    get:
      summary: Retrieve a list of all users.
      tags:
        - Users
        - List
    post:
      summary: Create a new user.
      tags:
        - Users
        - Create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
          description: Username for the user.
        - in: query
          name: email
          schema:
            type: string
          required: true
          description: Email address for the user.
  /users/{user_id}:
    get:
      summary: Retrieve a single user by ID.
      tags:
        - Users
        - Get
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user.
    put:
      summary: Update a single user.
      tags:
        - Users
        - Update
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
    delete:
      summary: Delete a single user.
      tags:
        - Users
        - Delete
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user.
  /users/register:
    post:
      summary: Creates a new user and adds them to the database.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
responses:
  '200':
    description: OK
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '#/definitions/User'
  '404':
    description: Not Found
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string

