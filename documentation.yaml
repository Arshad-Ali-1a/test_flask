openapi: 3.0.0
info:
  title: Bookstore API
  version: v1
paths:
  /books:
    get:
      summary: Retrieves a list of all available books.
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: string
                        price:
                          type: number
                          format: float
                        stock:
                          type: integer
    post:
      summary: Create a new book in the store.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_data:
                  type: object
                  properties:
                    title:
                      type: string
                    author:
                      type: string
                    price:
                      type: number
                      format: float
                    stock:
                      type: integer
      responses:
        '201':
          description: Book created successfully
  /books/{book_id}:
    get:
      summary: Retrieves a specific book by its ID.
      parameters:
        - in: path
          name: book_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      author:
                        type: string
                      price:
                        type: number
                        format: float
                      stock:
                        type: integer
  /books/add:
    post:
      summary: Adds a new book to the inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
      responses:
        '201':
          description: Book added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      author:
                        type: string
                      price:
                        type: number
                        format: float
                      stock:
                        type: integer
  /users:
    get:
      summary: Retrieve a list of all users in the system.
      responses:
        '200':
          description: A list of users
  /users/{user_id}:
    get:
      summary: Retrieve a specific user by its ID.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A single user
    put:
      summary: Update a specific user in the system.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
        - in: body
          name: user_data
          schema:
            type: object
          required: true
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete a specific user from the system.
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: User deleted successfully
  /users/register:
    post:
      summary: Create a new user account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                email:
                  type: string
                purchases:
                  type: array
              required:
                - id
                - username
                - email
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad Request


